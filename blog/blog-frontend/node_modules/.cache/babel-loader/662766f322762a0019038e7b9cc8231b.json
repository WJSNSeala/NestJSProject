{"ast":null,"code":"var _jsxFileName = \"/home/djkim0604/klaytn/workspace_djkim/js_test/react_basic/blog/blog-frontend/src/containers/auth/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeField, initializeForm, register } from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport { check } from '../../modules/user';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    form,\n    auth,\n    authError,\n    user\n  } = useSelector(_ref2 => {\n    let {\n      auth,\n      user\n    } = _ref2;\n    return {\n      form: auth.register,\n      auth: auth.auth,\n      authError: auth.authError,\n      user: user.user\n    };\n  });\n\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    dispatch(changeField({\n      form: 'register',\n      key: name,\n      value\n    }));\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const {\n      username,\n      password,\n      passwordConfirm\n    } = form;\n\n    if ([username, password, passwordConfirm].includes('')) {\n      setError('빈 칸을 모두 입력하세요');\n      return;\n    }\n\n    if (password !== passwordConfirm) {\n      setError('패스워드가 일치하지 않습니다.');\n      dispatch(changeField({\n        form: 'register',\n        key: 'password',\n        value: ''\n      }));\n      dispatch(changeField({\n        form: 'register',\n        key: 'passwordConfirms',\n        value: ''\n      }));\n      return;\n    }\n\n    dispatch(register({\n      username,\n      password\n    }));\n  };\n\n  useEffect(() => {\n    dispatch(initializeForm('register'));\n  }, [dispatch]);\n  useEffect( // 성공 실패시 인증에 대한 정보가 남는다.\n  () => {\n    if (authError) {\n      if (authError.response.status === 409) {\n        setError('이미 존재하는 계정입니다');\n        return;\n      }\n\n      setError('회원가입 실패');\n      return;\n    }\n\n    if (auth) {\n      console.log('register success');\n      console.log(auth);\n      dispatch(check());\n      navigate('/');\n    }\n  }, [auth, authError, dispatch, navigate]);\n  useEffect(() => {\n    if (user) {\n      console.log('check API success');\n      console.log(user);\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(AuthForm, {\n    type: \"register\",\n    form: form,\n    onChange: onChange,\n    onSubmit: onSubmit,\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterForm, \"pIljts7D0239GywA/IwcY0HOA2w=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","changeField","initializeForm","register","AuthForm","check","useNavigate","RegisterForm","history","error","setError","dispatch","navigate","form","auth","authError","user","onChange","e","value","name","target","key","onSubmit","preventDefault","username","password","passwordConfirm","includes","response","status","console","log"],"sources":["/home/djkim0604/klaytn/workspace_djkim/js_test/react_basic/blog/blog-frontend/src/containers/auth/RegisterForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport {changeField, initializeForm, register} from '../../modules/auth';\nimport AuthForm from '../../components/auth/AuthForm';\nimport {check} from '../../modules/user';\nimport {useNavigate} from 'react-router-dom';\n\nconst RegisterForm = ({history}) => {\n    const [error, setError] = useState(null);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const {form, auth, authError, user} = useSelector(\n        ({auth, user}) => ({\n            form: auth.register,\n            auth: auth.auth,\n            authError: auth.authError,\n            user: user.user,\n        })\n    );\n\n    const onChange = e => {\n        const {value, name} = e.target;\n        dispatch(\n            changeField({\n                form:'register',\n                key:name,\n                value\n            })\n        );\n    };\n\n    const onSubmit = e => {\n        e.preventDefault();\n        const {username, password, passwordConfirm} = form;\n        if ([username, password, passwordConfirm].includes('')) {\n            setError('빈 칸을 모두 입력하세요');\n            return;\n        }\n        if (password !== passwordConfirm) {\n            setError('패스워드가 일치하지 않습니다.');\n            dispatch(changeField({form: 'register', key:'password', value:''}));\n            dispatch(changeField({form: 'register', key:'passwordConfirms', value:''}));\n            return;\n        }\n        dispatch(register({username, password}));\n    }\n\n    useEffect(\n        () => {\n            dispatch(initializeForm('register'));\n        },\n        [dispatch]\n    );\n    \n    useEffect( // 성공 실패시 인증에 대한 정보가 남는다.\n        () => {\n            if (authError) {\n                if(authError.response.status === 409) {\n                    setError('이미 존재하는 계정입니다');\n                    return;\n                }\n                setError('회원가입 실패');\n                return;\n            }\n            if (auth) {\n                console.log('register success');\n                console.log(auth);\n                dispatch(check());\n                navigate('/');\n            }\n        }, [auth, authError, dispatch, navigate]\n    );\n    \n    useEffect(\n        () => {\n            if (user) {\n                console.log('check API success');\n                console.log(user);\n            }\n        }, [user]\n    )\n    return (\n        <AuthForm\n        type=\"register\"\n        form={form}\n        onChange={onChange}\n        onSubmit={onSubmit}\n        error={error}\n        />\n    );\n};\n\nexport default RegisterForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}