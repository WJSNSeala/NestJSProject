{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport produce from 'immer';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport { takeLatest } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes('auth/REGISTER');\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes('auth/LOGIN');\nexport const changeField = createAction(CHANGE_FIELD, _ref => {\n  let {\n    form,\n    key,\n    value\n  } = _ref;\n  return {\n    form,\n    //register, login \n    key,\n    // username, password, passwordConfirm\n    value // 실제 바꾸려는 값\n\n  };\n});\nexport const initializeForm = createAction(INITIALIZE_FORM, form => form);\nexport const register = createAction(REGISTER, _ref2 => {\n  let {\n    username,\n    password\n  } = _ref2;\n  return {\n    username,\n    password\n  };\n});\nexport const login = createAction(LOGIN, _ref3 => {\n  let {\n    username,\n    password\n  } = _ref3;\n  return {\n    username,\n    password\n  };\n}); // saga create\n\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\nexport function* authSaga() {\n  yield takeLatest(REGISTER, registerSaga);\n  yield takeLatest(LOGIN, loginSaga);\n}\nconst initialState = {\n  register: {\n    username: '',\n    password: '',\n    passwordConfirm: ''\n  },\n  login: {\n    username: '',\n    password: ''\n  },\n  auth: null,\n  authError: null\n};\nconst auth = handleActions({\n  [CHANGE_FIELD]: (state, _ref4) => {\n    let {\n      payload: {\n        form,\n        key,\n        value\n      }\n    } = _ref4;\n    return produce(state, draft => {\n      draft[form][key] = value;\n    });\n  },\n  [INITIALIZE_FORM]: (state, _ref5) => {\n    let {\n      payload: form\n    } = _ref5;\n    return { ...state,\n      [form]: initialState[form],\n      authError: null\n    };\n  },\n  [REGISTER_SUCCESS]: (state, _ref6) => {\n    let {\n      payload: auth\n    } = _ref6;\n    return { ...state,\n      authError: null,\n      auth\n    };\n  },\n  [REGISTER_FAILURE]: (state, _ref7) => {\n    let {\n      payload: error\n    } = _ref7;\n    return { ...state,\n      authError: error\n    };\n  },\n  [LOGIN_SUCCESS]: (state, _ref8) => {\n    let {\n      payload: auth\n    } = _ref8;\n    console.log('login success action', auth);\n    return { ...state,\n      authError: null,\n      auth\n    };\n  },\n  [LOGIN_FAILURE]: (state, _ref9) => {\n    let {\n      payload: error\n    } = _ref9;\n    return { ...state,\n      authError: error\n    };\n  }\n}, initialState);\nexport default auth;","map":{"version":3,"names":["createAction","handleActions","produce","createRequestSaga","createRequestActionTypes","takeLatest","authAPI","CHANGE_FIELD","INITIALIZE_FORM","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","changeField","form","key","value","initializeForm","register","username","password","login","registerSaga","loginSaga","authSaga","initialState","passwordConfirm","auth","authError","state","payload","draft","error","console","log"],"sources":["/home/djkim0604/klaytn/workspace_djkim/js_test/react_basic/blog/blog-frontend/src/modules/auth.js"],"sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport produce from 'immer';\nimport createRequestSaga, {createRequestActionTypes} from '../lib/createRequestSaga';\nimport {takeLatest} from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\n\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\n\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes('auth/REGISTER');\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes('auth/LOGIN');\n\n\nexport const changeField = createAction(\n    CHANGE_FIELD,\n    ({form, key, value}) => ({\n        form, //register, login \n        key, // username, password, passwordConfirm\n        value, // 실제 바꾸려는 값\n    }),\n);\n\nexport const initializeForm = createAction(INITIALIZE_FORM, form => form);\n\nexport const register = createAction(\n    REGISTER,\n    ({username, password}) => ({\n        username,\n        password,\n    }) \n);\n\nexport const login = createAction(\n    LOGIN,\n    ({username, password}) => ({\n        username,\n        password,\n    })\n);\n\n// saga create\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\n\nexport function* authSaga() {\n    yield takeLatest(REGISTER, registerSaga);\n    yield takeLatest(LOGIN, loginSaga);\n}\n\nconst initialState = {\n    register: {\n        username: '',\n        password: '',\n        passwordConfirm: '',\n    },\n    login: {\n        username: '',\n        password: '',\n    },\n    auth: null,\n    authError: null,\n};\n\nconst auth = handleActions(\n    {\n        [CHANGE_FIELD]: (state, {payload: {form, key, value}}) => \n            produce(state, draft => {\n                draft[form][key] = value;\n            }),\n        [INITIALIZE_FORM]: (state, {payload: form}) => ({\n            ...state,\n            [form]: initialState[form],\n            authError: null\n        }),\n        [REGISTER_SUCCESS]: (state, {payload: auth}) => ({\n            ...state,\n            authError: null,\n            auth\n        }),\n        [REGISTER_FAILURE]: (state, {payload: error}) => ({\n            ...state,\n            authError: error,\n        }),\n        [LOGIN_SUCCESS]: (state, {payload: auth}) => {\n            console.log('login success action', auth);            \n            return {\n                ...state,\n                authError: null,\n                auth,\n            };\n        },\n        [LOGIN_FAILURE]: (state, {payload: error}) => ({\n            ...state,\n            authError: error\n        })\n    },\n    initialState\n);\n\nexport default auth;\n"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,OAAP,MAAoB,OAApB;AACA,OAAOC,iBAAP,IAA2BC,wBAA3B,QAA0D,0BAA1D;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AAEA,MAAMC,YAAY,GAAG,mBAArB;AACA,MAAMC,eAAe,GAAG,sBAAxB;AAEA,MAAM,CAACC,QAAD,EAAWC,gBAAX,EAA6BC,gBAA7B,IAAiDP,wBAAwB,CAAC,eAAD,CAA/E;AACA,MAAM,CAACQ,KAAD,EAAQC,aAAR,EAAuBC,aAAvB,IAAwCV,wBAAwB,CAAC,YAAD,CAAtE;AAGA,OAAO,MAAMW,WAAW,GAAGf,YAAY,CACnCO,YADmC,EAEnC;EAAA,IAAC;IAACS,IAAD;IAAOC,GAAP;IAAYC;EAAZ,CAAD;EAAA,OAAyB;IACrBF,IADqB;IACf;IACNC,GAFqB;IAEhB;IACLC,KAHqB,CAGd;;EAHc,CAAzB;AAAA,CAFmC,CAAhC;AASP,OAAO,MAAMC,cAAc,GAAGnB,YAAY,CAACQ,eAAD,EAAkBQ,IAAI,IAAIA,IAA1B,CAAnC;AAEP,OAAO,MAAMI,QAAQ,GAAGpB,YAAY,CAChCS,QADgC,EAEhC;EAAA,IAAC;IAACY,QAAD;IAAWC;EAAX,CAAD;EAAA,OAA2B;IACvBD,QADuB;IAEvBC;EAFuB,CAA3B;AAAA,CAFgC,CAA7B;AAQP,OAAO,MAAMC,KAAK,GAAGvB,YAAY,CAC7BY,KAD6B,EAE7B;EAAA,IAAC;IAACS,QAAD;IAAWC;EAAX,CAAD;EAAA,OAA2B;IACvBD,QADuB;IAEvBC;EAFuB,CAA3B;AAAA,CAF6B,CAA1B,C,CAQP;;AACA,MAAME,YAAY,GAAGrB,iBAAiB,CAACM,QAAD,EAAWH,OAAO,CAACc,QAAnB,CAAtC;AACA,MAAMK,SAAS,GAAGtB,iBAAiB,CAACS,KAAD,EAAQN,OAAO,CAACiB,KAAhB,CAAnC;AAEA,OAAO,UAAUG,QAAV,GAAqB;EACxB,MAAMrB,UAAU,CAACI,QAAD,EAAWe,YAAX,CAAhB;EACA,MAAMnB,UAAU,CAACO,KAAD,EAAQa,SAAR,CAAhB;AACH;AAED,MAAME,YAAY,GAAG;EACjBP,QAAQ,EAAE;IACNC,QAAQ,EAAE,EADJ;IAENC,QAAQ,EAAE,EAFJ;IAGNM,eAAe,EAAE;EAHX,CADO;EAMjBL,KAAK,EAAE;IACHF,QAAQ,EAAE,EADP;IAEHC,QAAQ,EAAE;EAFP,CANU;EAUjBO,IAAI,EAAE,IAVW;EAWjBC,SAAS,EAAE;AAXM,CAArB;AAcA,MAAMD,IAAI,GAAG5B,aAAa,CACtB;EACI,CAACM,YAAD,GAAgB,CAACwB,KAAD;IAAA,IAAQ;MAACC,OAAO,EAAE;QAAChB,IAAD;QAAOC,GAAP;QAAYC;MAAZ;IAAV,CAAR;IAAA,OACZhB,OAAO,CAAC6B,KAAD,EAAQE,KAAK,IAAI;MACpBA,KAAK,CAACjB,IAAD,CAAL,CAAYC,GAAZ,IAAmBC,KAAnB;IACH,CAFM,CADK;EAAA,CADpB;EAKI,CAACV,eAAD,GAAmB,CAACuB,KAAD;IAAA,IAAQ;MAACC,OAAO,EAAEhB;IAAV,CAAR;IAAA,OAA6B,EAC5C,GAAGe,KADyC;MAE5C,CAACf,IAAD,GAAQW,YAAY,CAACX,IAAD,CAFwB;MAG5Cc,SAAS,EAAE;IAHiC,CAA7B;EAAA,CALvB;EAUI,CAACpB,gBAAD,GAAoB,CAACqB,KAAD;IAAA,IAAQ;MAACC,OAAO,EAAEH;IAAV,CAAR;IAAA,OAA6B,EAC7C,GAAGE,KAD0C;MAE7CD,SAAS,EAAE,IAFkC;MAG7CD;IAH6C,CAA7B;EAAA,CAVxB;EAeI,CAAClB,gBAAD,GAAoB,CAACoB,KAAD;IAAA,IAAQ;MAACC,OAAO,EAAEE;IAAV,CAAR;IAAA,OAA8B,EAC9C,GAAGH,KAD2C;MAE9CD,SAAS,EAAEI;IAFmC,CAA9B;EAAA,CAfxB;EAmBI,CAACrB,aAAD,GAAiB,CAACkB,KAAD,YAA4B;IAAA,IAApB;MAACC,OAAO,EAAEH;IAAV,CAAoB;IACzCM,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCP,IAApC;IACA,OAAO,EACH,GAAGE,KADA;MAEHD,SAAS,EAAE,IAFR;MAGHD;IAHG,CAAP;EAKH,CA1BL;EA2BI,CAACf,aAAD,GAAiB,CAACiB,KAAD;IAAA,IAAQ;MAACC,OAAO,EAAEE;IAAV,CAAR;IAAA,OAA8B,EAC3C,GAAGH,KADwC;MAE3CD,SAAS,EAAEI;IAFgC,CAA9B;EAAA;AA3BrB,CADsB,EAiCtBP,YAjCsB,CAA1B;AAoCA,eAAeE,IAAf"},"metadata":{},"sourceType":"module"}