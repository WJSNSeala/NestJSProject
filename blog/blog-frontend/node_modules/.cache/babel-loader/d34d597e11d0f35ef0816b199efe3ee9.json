{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { startLoading, finishLoading } from '../modules/loading';\nexport const createRequestActionTypes = type => {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return [type, SUCCESS, FAILURE];\n};\nexport default function createRequestSaga(type, request) {\n  const SUCCESS = `${type}_SUCCESS`;\n  const FAILURE = `${type}_FAILURE`;\n  return function* (action) {\n    yield put(startLoading(type));\n\n    try {\n      const response = yield call(request, action.payload); // request(action.payload) 와 동일\n\n      console.log('create saga', response.data);\n      console.log('response header', response.headers.hasOwnProperty('last-page'));\n      yield put({\n        type: SUCCESS,\n        payload: response.data,\n        meta: response\n      });\n    } catch (e) {\n      yield put({\n        type: FAILURE,\n        payload: e,\n        error: true\n      });\n    }\n\n    yield put(finishLoading(type));\n  };\n}","map":{"version":3,"names":["call","put","startLoading","finishLoading","createRequestActionTypes","type","SUCCESS","FAILURE","createRequestSaga","request","action","response","payload","console","log","data","headers","hasOwnProperty","meta","e","error"],"sources":["/home/djkim0604/klaytn/workspace_djkim/js_test/react_basic/blog/blog-frontend/src/lib/createRequestSaga.js"],"sourcesContent":["import {call, put} from 'redux-saga/effects';\nimport {startLoading, finishLoading} from '../modules/loading';\n\n\nexport const createRequestActionTypes = type => {\n    const SUCCESS = `${type}_SUCCESS`;\n    const FAILURE = `${type}_FAILURE`;\n\n    return [type, SUCCESS, FAILURE];\n};\n\nexport default function createRequestSaga(type, request) {\n    const SUCCESS = `${type}_SUCCESS`;\n    const FAILURE = `${type}_FAILURE`;\n\n    return function*(action) {\n        yield put(startLoading(type));\n        try {\n            const response = yield call(request, action.payload);\n            // request(action.payload) 와 동일\n            console.log('create saga', response.data);\n            console.log('response header', response.headers.hasOwnProperty('last-page'));\n            yield put({\n                type: SUCCESS,\n                payload: response.data,\n                meta: response,\n            });\n        } catch(e) {\n            yield put({\n                type: FAILURE,\n                payload: e,\n                error: true,\n            });\n        }\n        yield put(finishLoading(type));\n    }\n}"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,GAAd,QAAwB,oBAAxB;AACA,SAAQC,YAAR,EAAsBC,aAAtB,QAA0C,oBAA1C;AAGA,OAAO,MAAMC,wBAAwB,GAAGC,IAAI,IAAI;EAC5C,MAAMC,OAAO,GAAI,GAAED,IAAK,UAAxB;EACA,MAAME,OAAO,GAAI,GAAEF,IAAK,UAAxB;EAEA,OAAO,CAACA,IAAD,EAAOC,OAAP,EAAgBC,OAAhB,CAAP;AACH,CALM;AAOP,eAAe,SAASC,iBAAT,CAA2BH,IAA3B,EAAiCI,OAAjC,EAA0C;EACrD,MAAMH,OAAO,GAAI,GAAED,IAAK,UAAxB;EACA,MAAME,OAAO,GAAI,GAAEF,IAAK,UAAxB;EAEA,OAAO,WAAUK,MAAV,EAAkB;IACrB,MAAMT,GAAG,CAACC,YAAY,CAACG,IAAD,CAAb,CAAT;;IACA,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMX,IAAI,CAACS,OAAD,EAAUC,MAAM,CAACE,OAAjB,CAA3B,CADA,CAEA;;MACAC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,QAAQ,CAACI,IAApC;MACAF,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,QAAQ,CAACK,OAAT,CAAiBC,cAAjB,CAAgC,WAAhC,CAA/B;MACA,MAAMhB,GAAG,CAAC;QACNI,IAAI,EAAEC,OADA;QAENM,OAAO,EAAED,QAAQ,CAACI,IAFZ;QAGNG,IAAI,EAAEP;MAHA,CAAD,CAAT;IAKH,CAVD,CAUE,OAAMQ,CAAN,EAAS;MACP,MAAMlB,GAAG,CAAC;QACNI,IAAI,EAAEE,OADA;QAENK,OAAO,EAAEO,CAFH;QAGNC,KAAK,EAAE;MAHD,CAAD,CAAT;IAKH;;IACD,MAAMnB,GAAG,CAACE,aAAa,CAACE,IAAD,CAAd,CAAT;EACH,CApBD;AAqBH"},"metadata":{},"sourceType":"module"}