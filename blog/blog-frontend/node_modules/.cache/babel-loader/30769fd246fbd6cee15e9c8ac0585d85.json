{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest, call } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes('user/CHECK');\nconst LOGOUT = 'user/LOGOUT';\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nexport const logout = createAction(LOGOUT);\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\n\nfunction checkFailureSaga() {\n  try {\n    localStorage.removeItem('user');\n  } catch (e) {\n    console.log('local storage is not working');\n  }\n}\n\nfunction* logoutSaga() {\n  try {\n    yield call(authAPI.logout);\n    localStorage.removeItem('user');\n  } catch (e) {\n    console.log(e);\n  }\n} //check가 성공하는지 실패하는지 정보가 action으로 관리\n\n\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\n  yield takeLatest(LOGOUT, logoutSaga);\n}\nconst initialState = {\n  user: null,\n  checkError: null\n};\nexport default handleActions({\n  [TEMP_SET_USER]: (state, _ref) => {\n    let {\n      payload: user\n    } = _ref;\n    return { ...state,\n      user\n    };\n  },\n  [CHECK_SUCCESS]: (state, _ref2) => {\n    let {\n      payload: user\n    } = _ref2;\n    return { ...state,\n      user,\n      checkError: null\n    };\n  },\n  [CHECK_FAILURE]: (state, _ref3) => {\n    let {\n      payload: error\n    } = _ref3;\n    return { ...state,\n      user: null,\n      checkError: error\n    };\n  },\n  [LOGOUT]: state => ({ ...state,\n    user: null\n  })\n}, initialState);","map":{"version":3,"names":["createAction","handleActions","takeLatest","call","authAPI","createRequestSaga","createRequestActionTypes","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","tempSetUser","user","check","logout","checkSaga","checkFailureSaga","localStorage","removeItem","e","console","log","logoutSaga","userSaga","initialState","checkError","state","payload","error"],"sources":["/Users/dia_forever_0914/Programming/WebProgramming/NestJSProject/blog/blog-frontend/src/modules/user.js"],"sourcesContent":["import {createAction, handleActions} from 'redux-actions';\nimport {takeLatest, call} from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, {createRequestActionTypes} from '../lib/createRequestSaga';\n\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\n    'user/CHECK',\n);\nconst LOGOUT = 'user/LOGOUT';\n\n\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nexport const logout = createAction(LOGOUT);\n\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\n\nfunction checkFailureSaga() {\n    try{\n        localStorage.removeItem('user');\n    } catch (e) {\n        console.log('local storage is not working');\n    }\n}\n\nfunction* logoutSaga() {\n    try {\n        yield call(authAPI.logout);\n        localStorage.removeItem('user');\n    } catch (e) {\n        console.log(e);\n    }\n}\n//check가 성공하는지 실패하는지 정보가 action으로 관리\nexport function* userSaga() {\n    yield takeLatest(CHECK, checkSaga);\n    yield takeLatest(CHECK_FAILURE, checkFailureSaga);\n    yield takeLatest(LOGOUT, logoutSaga);\n}\n\nconst initialState = {\n    user: null,\n    checkError: null,\n};\n\nexport default handleActions(\n    {\n        [TEMP_SET_USER] : (state, {payload: user}) => ({\n            ...state,\n            user,\n        }),\n        [CHECK_SUCCESS] : (state, {payload: user}) => ({\n            ...state,\n            user,\n            checkError: null\n        }),\n        [CHECK_FAILURE]: (state, {payload:error}) => ({\n            ...state,\n            user: null,\n            checkError: error,\n        }),\n        [LOGOUT] : state =>({\n              ...state,\n              user: null\n        })\n    },\n    initialState,\n);\n"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AACA,SAAQC,UAAR,EAAoBC,IAApB,QAA+B,oBAA/B;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AACA,OAAOC,iBAAP,IAA2BC,wBAA3B,QAA0D,0BAA1D;AAEA,MAAMC,aAAa,GAAG,oBAAtB;AACA,MAAM,CAACC,KAAD,EAAQC,aAAR,EAAuBC,aAAvB,IAAwCJ,wBAAwB,CAClE,YADkE,CAAtE;AAGA,MAAMK,MAAM,GAAG,aAAf;AAGA,OAAO,MAAMC,WAAW,GAAGZ,YAAY,CAACO,aAAD,EAAgBM,IAAI,IAAIA,IAAxB,CAAhC;AACP,OAAO,MAAMC,KAAK,GAAGd,YAAY,CAACQ,KAAD,CAA1B;AACP,OAAO,MAAMO,MAAM,GAAGf,YAAY,CAACW,MAAD,CAA3B;AAEP,MAAMK,SAAS,GAAGX,iBAAiB,CAACG,KAAD,EAAQJ,OAAO,CAACU,KAAhB,CAAnC;;AAEA,SAASG,gBAAT,GAA4B;EACxB,IAAG;IACCC,YAAY,CAACC,UAAb,CAAwB,MAAxB;EACH,CAFD,CAEE,OAAOC,CAAP,EAAU;IACRC,OAAO,CAACC,GAAR,CAAY,8BAAZ;EACH;AACJ;;AAED,UAAUC,UAAV,GAAuB;EACnB,IAAI;IACA,MAAMpB,IAAI,CAACC,OAAO,CAACW,MAAT,CAAV;IACAG,YAAY,CAACC,UAAb,CAAwB,MAAxB;EACH,CAHD,CAGE,OAAOC,CAAP,EAAU;IACRC,OAAO,CAACC,GAAR,CAAYF,CAAZ;EACH;AACJ,C,CACD;;;AACA,OAAO,UAAUI,QAAV,GAAqB;EACxB,MAAMtB,UAAU,CAACM,KAAD,EAAQQ,SAAR,CAAhB;EACA,MAAMd,UAAU,CAACQ,aAAD,EAAgBO,gBAAhB,CAAhB;EACA,MAAMf,UAAU,CAACS,MAAD,EAASY,UAAT,CAAhB;AACH;AAED,MAAME,YAAY,GAAG;EACjBZ,IAAI,EAAE,IADW;EAEjBa,UAAU,EAAE;AAFK,CAArB;AAKA,eAAezB,aAAa,CACxB;EACI,CAACM,aAAD,GAAkB,CAACoB,KAAD;IAAA,IAAQ;MAACC,OAAO,EAAEf;IAAV,CAAR;IAAA,OAA6B,EAC3C,GAAGc,KADwC;MAE3Cd;IAF2C,CAA7B;EAAA,CADtB;EAKI,CAACJ,aAAD,GAAkB,CAACkB,KAAD;IAAA,IAAQ;MAACC,OAAO,EAAEf;IAAV,CAAR;IAAA,OAA6B,EAC3C,GAAGc,KADwC;MAE3Cd,IAF2C;MAG3Ca,UAAU,EAAE;IAH+B,CAA7B;EAAA,CALtB;EAUI,CAAChB,aAAD,GAAiB,CAACiB,KAAD;IAAA,IAAQ;MAACC,OAAO,EAACC;IAAT,CAAR;IAAA,OAA6B,EAC1C,GAAGF,KADuC;MAE1Cd,IAAI,EAAE,IAFoC;MAG1Ca,UAAU,EAAEG;IAH8B,CAA7B;EAAA,CAVrB;EAeI,CAAClB,MAAD,GAAWgB,KAAK,KAAI,EACd,GAAGA,KADW;IAEdd,IAAI,EAAE;EAFQ,CAAJ;AAfpB,CADwB,EAqBxBY,YArBwB,CAA5B"},"metadata":{},"sourceType":"module"}