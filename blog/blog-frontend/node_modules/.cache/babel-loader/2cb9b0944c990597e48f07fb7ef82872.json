{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport { takeLatest } from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes('user/CHECK');\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\nconst checkSaga = createRequestSaga(CHECK, authAPI.check); //check가 성공하는지 실패하는지 정보가 action으로 관리\n\nexport function* userSaga() {\n  yield takeLatest(CHECK, checkSaga);\n}\nconst initialState = {\n  user: null,\n  checkError: null\n};\nexport default handleActions({\n  [TEMP_SET_USER]: (state, _ref) => {\n    let {\n      payload: user\n    } = _ref;\n    return { ...state,\n      user\n    };\n  },\n  [CHECK_SUCCESS]: (state, _ref2) => {\n    let {\n      payload: user\n    } = _ref2;\n    return { ...state,\n      user,\n      checkError: null\n    };\n  },\n  [CHECK_FAILURE]: (state, _ref3) => {\n    let {\n      payload: error\n    } = _ref3;\n    return { ...state,\n      user: null,\n      checkError: error\n    };\n  }\n}, initialState);","map":{"version":3,"names":["createAction","handleActions","takeLatest","authAPI","createRequestSaga","createRequestActionTypes","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","tempSetUser","user","check","checkSaga","userSaga","initialState","checkError","state","payload","error"],"sources":["/home/djkim0604/klaytn/workspace_djkim/js_test/react_basic/blog/blog-frontend/src/modules/user.js"],"sourcesContent":["import {createAction, handleActions} from 'redux-actions';\nimport {takeLatest} from 'redux-saga/effects';\nimport * as authAPI from '../lib/api/auth';\nimport createRequestSaga, {createRequestActionTypes} from '../lib/createRequestSaga';\n\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] = createRequestActionTypes(\n    'user/CHECK',\n);\n\nexport const tempSetUser = createAction(TEMP_SET_USER, user => user);\nexport const check = createAction(CHECK);\n\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\n//check가 성공하는지 실패하는지 정보가 action으로 관리\nexport function* userSaga() {\n    yield takeLatest(CHECK, checkSaga);\n}\n\nconst initialState = {\n    user: null,\n    checkError: null,\n};\n\nexport default handleActions(\n    {\n        [TEMP_SET_USER] : (state, {payload: user}) => ({\n            ...state,\n            user,\n        }),\n        [CHECK_SUCCESS] : (state, {payload: user}) => ({\n            ...state,\n            user,\n            checkError: null\n        }),\n        [CHECK_FAILURE]: (state, {payload:error}) => ({\n            ...state,\n            user: null,\n            checkError: error,\n        }),\n    },\n    initialState,\n);\n"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,iBAAzB;AACA,OAAOC,iBAAP,IAA2BC,wBAA3B,QAA0D,0BAA1D;AAEA,MAAMC,aAAa,GAAG,oBAAtB;AACA,MAAM,CAACC,KAAD,EAAQC,aAAR,EAAuBC,aAAvB,IAAwCJ,wBAAwB,CAClE,YADkE,CAAtE;AAIA,OAAO,MAAMK,WAAW,GAAGV,YAAY,CAACM,aAAD,EAAgBK,IAAI,IAAIA,IAAxB,CAAhC;AACP,OAAO,MAAMC,KAAK,GAAGZ,YAAY,CAACO,KAAD,CAA1B;AAEP,MAAMM,SAAS,GAAGT,iBAAiB,CAACG,KAAD,EAAQJ,OAAO,CAACS,KAAhB,CAAnC,C,CACA;;AACA,OAAO,UAAUE,QAAV,GAAqB;EACxB,MAAMZ,UAAU,CAACK,KAAD,EAAQM,SAAR,CAAhB;AACH;AAED,MAAME,YAAY,GAAG;EACjBJ,IAAI,EAAE,IADW;EAEjBK,UAAU,EAAE;AAFK,CAArB;AAKA,eAAef,aAAa,CACxB;EACI,CAACK,aAAD,GAAkB,CAACW,KAAD;IAAA,IAAQ;MAACC,OAAO,EAAEP;IAAV,CAAR;IAAA,OAA6B,EAC3C,GAAGM,KADwC;MAE3CN;IAF2C,CAA7B;EAAA,CADtB;EAKI,CAACH,aAAD,GAAkB,CAACS,KAAD;IAAA,IAAQ;MAACC,OAAO,EAAEP;IAAV,CAAR;IAAA,OAA6B,EAC3C,GAAGM,KADwC;MAE3CN,IAF2C;MAG3CK,UAAU,EAAE;IAH+B,CAA7B;EAAA,CALtB;EAUI,CAACP,aAAD,GAAiB,CAACQ,KAAD;IAAA,IAAQ;MAACC,OAAO,EAACC;IAAT,CAAR;IAAA,OAA6B,EAC1C,GAAGF,KADuC;MAE1CN,IAAI,EAAE,IAFoC;MAG1CK,UAAU,EAAEG;IAH8B,CAA7B;EAAA;AAVrB,CADwB,EAiBxBJ,YAjBwB,CAA5B"},"metadata":{},"sourceType":"module"}