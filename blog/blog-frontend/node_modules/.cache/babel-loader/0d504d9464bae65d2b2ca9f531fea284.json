{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\nconst [LIST_POSTS, LIST_POSTS_SUCCESS, LIST_POSTS_FAILURE] = createRequestActionTypes('posts/LIST_POSTS');\nexport const listPosts = createAction(LIST_POSTS, _ref => {\n  let {\n    tag,\n    username,\n    page\n  } = _ref;\n  return {\n    tag,\n    username,\n    page\n  };\n});\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\nexport function* postsSaga() {\n  yield takeLatest(LIST_POSTS, listPostsSaga);\n}\nconst initialState = {\n  posts: null,\n  error: null\n};\nconst posts = handleActions({\n  [LIST_POSTS_SUCCESS]: (state, _ref2) => {\n    let {\n      payload: posts\n    } = _ref2;\n    return { ...state,\n      posts\n    };\n  },\n  [LIST_POSTS_FAILURE]: (state, _ref3) => {\n    let {\n      payload: error\n    } = _ref3;\n    return { ...state,\n      error\n    };\n  }\n}, initialState);\nexport default posts;","map":{"version":3,"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","postsAPI","takeLatest","LIST_POSTS","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","listPosts","tag","username","page","listPostsSaga","postsSaga","initialState","posts","error","state","payload"],"sources":["/home/djkim0604/klaytn/workspace_djkim/js_test/react_basic/blog/blog-frontend/src/modules/posts.js"],"sourcesContent":["import {createAction, handleActions} from 'redux-actions';\nimport createRequestSaga, {createRequestActionTypes} from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport {takeLatest} from 'redux-saga/effects';\n\nconst [LIST_POSTS, LIST_POSTS_SUCCESS, LIST_POSTS_FAILURE] = createRequestActionTypes('posts/LIST_POSTS');\n\nexport const listPosts = createAction(\n    LIST_POSTS,\n    ({tag, username, page}) => ({tag, username, page}),\n);\n\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\n\nexport function* postsSaga() {\n    yield takeLatest(LIST_POSTS, listPostsSaga);\n}\n\nconst initialState = {\n    posts: null,\n    error: null,\n};\n\nconst posts = handleActions(\n    {\n        [LIST_POSTS_SUCCESS]: (state, {payload: posts}) => ({\n            ...state,\n            posts,\n        }),\n        [LIST_POSTS_FAILURE]: (state, {payload: error}) => ({\n            ...state,\n            error,\n        }),\n    },\n    initialState,\n);\n\nexport default posts;\n"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AACA,OAAOC,iBAAP,IAA2BC,wBAA3B,QAA0D,0BAA1D;AACA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AAEA,MAAM,CAACC,UAAD,EAAaC,kBAAb,EAAiCC,kBAAjC,IAAuDL,wBAAwB,CAAC,kBAAD,CAArF;AAEA,OAAO,MAAMM,SAAS,GAAGT,YAAY,CACjCM,UADiC,EAEjC;EAAA,IAAC;IAACI,GAAD;IAAMC,QAAN;IAAgBC;EAAhB,CAAD;EAAA,OAA4B;IAACF,GAAD;IAAMC,QAAN;IAAgBC;EAAhB,CAA5B;AAAA,CAFiC,CAA9B;AAKP,MAAMC,aAAa,GAAGX,iBAAiB,CAACI,UAAD,EAAaF,QAAQ,CAACK,SAAtB,CAAvC;AAEA,OAAO,UAAUK,SAAV,GAAsB;EACzB,MAAMT,UAAU,CAACC,UAAD,EAAaO,aAAb,CAAhB;AACH;AAED,MAAME,YAAY,GAAG;EACjBC,KAAK,EAAE,IADU;EAEjBC,KAAK,EAAE;AAFU,CAArB;AAKA,MAAMD,KAAK,GAAGf,aAAa,CACvB;EACI,CAACM,kBAAD,GAAsB,CAACW,KAAD;IAAA,IAAQ;MAACC,OAAO,EAAEH;IAAV,CAAR;IAAA,OAA8B,EAChD,GAAGE,KAD6C;MAEhDF;IAFgD,CAA9B;EAAA,CAD1B;EAKI,CAACR,kBAAD,GAAsB,CAACU,KAAD;IAAA,IAAQ;MAACC,OAAO,EAAEF;IAAV,CAAR;IAAA,OAA8B,EAChD,GAAGC,KAD6C;MAEhDD;IAFgD,CAA9B;EAAA;AAL1B,CADuB,EAWvBF,YAXuB,CAA3B;AAcA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}