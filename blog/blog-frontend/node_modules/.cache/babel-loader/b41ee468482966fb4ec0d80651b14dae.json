{"ast":null,"code":"import { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as postAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\nconst INITIALIZE = 'write/INITIALIZE';\nconst CHANGE_FIELD = 'write/CHANGE_FIELD';\nconst SET_ORIGINAL_POST = 'write/SET_ORIGINAL_POST';\nconst [WRITE_POST, WRITE_POST_SUCCESS, WRITE_POST_FAILURE] = createRequestActionTypes('write/WRITE_POST');\nexport const initialize = createAction(INITIALIZE);\nexport const changeField = createAction(CHANGE_FIELD, _ref => {\n  let {\n    key,\n    value\n  } = _ref;\n  return {\n    key,\n    value\n  };\n});\nexport const writePost = createAction(WRITE_POST, _ref2 => {\n  let {\n    title,\n    body,\n    tags\n  } = _ref2;\n  return {\n    title,\n    body,\n    tags\n  };\n});\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, pot => port);\nconst writePostSaga = createRequestSaga(WRITE_POST, postAPI.writePost);\nexport function* writeSaga() {\n  yield takeLatest(WRITE_POST, writePostSaga);\n}\nconst initialState = {\n  title: '',\n  body: '',\n  tags: [],\n  post: null,\n  postError: null,\n  originalPostId: null\n};\nconst write = handleActions({\n  [INITIALIZE]: state => initialState,\n  [CHANGE_FIELD]: (state, _ref3) => {\n    let {\n      payload: {\n        key,\n        value\n      }\n    } = _ref3;\n    return { ...state,\n      [key]: value\n    };\n  },\n  [WRITE_POST]: state => ({ ...state,\n    post: null,\n    postError: null\n  }),\n  [WRITE_POST_SUCCESS]: (state, _ref4) => {\n    let {\n      payload: post\n    } = _ref4;\n    return { ...state,\n      post\n    };\n  },\n  [WRITE_POST_FAILURE]: (state, _ref5) => {\n    let {\n      payload: postError\n    } = _ref5;\n    return { ...state,\n      postError\n    };\n  },\n  [SET_ORIGINAL_POST]: (state, _ref6) => {\n    let {\n      payload: post\n    } = _ref6;\n    return { ...state,\n      title: post.title,\n      body: post.body,\n      tags: post.tags,\n      originalPostId: post._id\n    };\n  }\n}, initialState);\nexport default write;","map":{"version":3,"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","postAPI","takeLatest","INITIALIZE","CHANGE_FIELD","SET_ORIGINAL_POST","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","initialize","changeField","key","value","writePost","title","body","tags","setOriginalPost","pot","port","writePostSaga","writeSaga","initialState","post","postError","originalPostId","write","state","payload","_id"],"sources":["/home/djkim0604/klaytn/workspace_djkim/js_test/react_basic/blog/blog-frontend/src/modules/write.js"],"sourcesContent":["import {createAction, handleActions} from 'redux-actions';\nimport createRequestSaga, {createRequestActionTypes} from '../lib/createRequestSaga';\nimport * as postAPI from '../lib/api/posts';\nimport {takeLatest} from 'redux-saga/effects';\n\nconst INITIALIZE = 'write/INITIALIZE';\nconst CHANGE_FIELD = 'write/CHANGE_FIELD';\nconst SET_ORIGINAL_POST = 'write/SET_ORIGINAL_POST';\n\nconst [WRITE_POST, WRITE_POST_SUCCESS, WRITE_POST_FAILURE] = createRequestActionTypes('write/WRITE_POST');\n\nexport const initialize = createAction(INITIALIZE);\nexport const changeField = createAction(CHANGE_FIELD, ({key, value}) => ({\n    key,\n    value,\n}));\nexport const writePost = createAction(WRITE_POST, \n    ({title, body, tags}) => ({\n        title, body, tags,\n    })\n);\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, pot => port);\n\nconst writePostSaga = createRequestSaga(WRITE_POST, postAPI.writePost);\nexport function* writeSaga() {\n    yield takeLatest(WRITE_POST, writePostSaga);\n}\n\nconst initialState = {\n    title: '',\n    body: '',\n    tags: [],\n    post: null,\n    postError: null,\n    originalPostId: null,\n};\n\nconst write = handleActions(\n    {\n        [INITIALIZE]: state => initialState,\n        [CHANGE_FIELD]: (state, {payload: {key, value}}) => ({\n            ...state,\n            [key]: value,\n        }),\n        [WRITE_POST]: state => ({\n            ...state,\n            post: null,\n            postError: null,\n        }),\n        [WRITE_POST_SUCCESS]: (state, {payload: post}) => ({\n            ...state,\n            post,\n        }),\n        [WRITE_POST_FAILURE]: (state, {payload: postError}) => ({\n            ...state,\n            postError,\n        }),\n        [SET_ORIGINAL_POST]: (state, {payload: post}) => ({\n            ...state,\n            title: post.title,\n            body: post.body,\n            tags: post.tags,\n            originalPostId: post._id,\n        })\n    },\n    initialState,\n);\n\nexport default write;\n\n"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AACA,OAAOC,iBAAP,IAA2BC,wBAA3B,QAA0D,0BAA1D;AACA,OAAO,KAAKC,OAAZ,MAAyB,kBAAzB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AAEA,MAAMC,UAAU,GAAG,kBAAnB;AACA,MAAMC,YAAY,GAAG,oBAArB;AACA,MAAMC,iBAAiB,GAAG,yBAA1B;AAEA,MAAM,CAACC,UAAD,EAAaC,kBAAb,EAAiCC,kBAAjC,IAAuDR,wBAAwB,CAAC,kBAAD,CAArF;AAEA,OAAO,MAAMS,UAAU,GAAGZ,YAAY,CAACM,UAAD,CAA/B;AACP,OAAO,MAAMO,WAAW,GAAGb,YAAY,CAACO,YAAD,EAAe;EAAA,IAAC;IAACO,GAAD;IAAMC;EAAN,CAAD;EAAA,OAAmB;IACrED,GADqE;IAErEC;EAFqE,CAAnB;AAAA,CAAf,CAAhC;AAIP,OAAO,MAAMC,SAAS,GAAGhB,YAAY,CAACS,UAAD,EACjC;EAAA,IAAC;IAACQ,KAAD;IAAQC,IAAR;IAAcC;EAAd,CAAD;EAAA,OAA0B;IACtBF,KADsB;IACfC,IADe;IACTC;EADS,CAA1B;AAAA,CADiC,CAA9B;AAKP,OAAO,MAAMC,eAAe,GAAGpB,YAAY,CAACQ,iBAAD,EAAoBa,GAAG,IAAIC,IAA3B,CAApC;AAEP,MAAMC,aAAa,GAAGrB,iBAAiB,CAACO,UAAD,EAAaL,OAAO,CAACY,SAArB,CAAvC;AACA,OAAO,UAAUQ,SAAV,GAAsB;EACzB,MAAMnB,UAAU,CAACI,UAAD,EAAac,aAAb,CAAhB;AACH;AAED,MAAME,YAAY,GAAG;EACjBR,KAAK,EAAE,EADU;EAEjBC,IAAI,EAAE,EAFW;EAGjBC,IAAI,EAAE,EAHW;EAIjBO,IAAI,EAAE,IAJW;EAKjBC,SAAS,EAAE,IALM;EAMjBC,cAAc,EAAE;AANC,CAArB;AASA,MAAMC,KAAK,GAAG5B,aAAa,CACvB;EACI,CAACK,UAAD,GAAcwB,KAAK,IAAIL,YAD3B;EAEI,CAAClB,YAAD,GAAgB,CAACuB,KAAD;IAAA,IAAQ;MAACC,OAAO,EAAE;QAACjB,GAAD;QAAMC;MAAN;IAAV,CAAR;IAAA,OAAqC,EACjD,GAAGe,KAD8C;MAEjD,CAAChB,GAAD,GAAOC;IAF0C,CAArC;EAAA,CAFpB;EAMI,CAACN,UAAD,GAAcqB,KAAK,KAAK,EACpB,GAAGA,KADiB;IAEpBJ,IAAI,EAAE,IAFc;IAGpBC,SAAS,EAAE;EAHS,CAAL,CANvB;EAWI,CAACjB,kBAAD,GAAsB,CAACoB,KAAD;IAAA,IAAQ;MAACC,OAAO,EAAEL;IAAV,CAAR;IAAA,OAA6B,EAC/C,GAAGI,KAD4C;MAE/CJ;IAF+C,CAA7B;EAAA,CAX1B;EAeI,CAACf,kBAAD,GAAsB,CAACmB,KAAD;IAAA,IAAQ;MAACC,OAAO,EAAEJ;IAAV,CAAR;IAAA,OAAkC,EACpD,GAAGG,KADiD;MAEpDH;IAFoD,CAAlC;EAAA,CAf1B;EAmBI,CAACnB,iBAAD,GAAqB,CAACsB,KAAD;IAAA,IAAQ;MAACC,OAAO,EAAEL;IAAV,CAAR;IAAA,OAA6B,EAC9C,GAAGI,KAD2C;MAE9Cb,KAAK,EAAES,IAAI,CAACT,KAFkC;MAG9CC,IAAI,EAAEQ,IAAI,CAACR,IAHmC;MAI9CC,IAAI,EAAEO,IAAI,CAACP,IAJmC;MAK9CS,cAAc,EAAEF,IAAI,CAACM;IALyB,CAA7B;EAAA;AAnBzB,CADuB,EA4BvBP,YA5BuB,CAA3B;AA+BA,eAAeI,KAAf"},"metadata":{},"sourceType":"module"}