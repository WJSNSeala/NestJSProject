{"ast":null,"code":"var _jsxFileName = \"/home/djkim0604/klaytn/workspace_djkim/js_test/react_basic/blog/blog-frontend/src/containers/write/WriteActionButtonsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport WriteActionButtons from '../../components/write/WriteActionButtons';\nimport { useSelector, useDispatch } from '../../../node_modules/react-redux/es/exports';\nimport { useNavigate } from '../../../node_modules/react-router-dom/index';\nimport { writePost, updatePost } from '../../modules/write';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WriteActionButtonsContainer = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    title,\n    body,\n    tags,\n    post,\n    postError,\n    originalPostId\n  } = useSelector(_ref => {\n    let {\n      write\n    } = _ref;\n    return {\n      title: write.title,\n      body: write.body,\n      tags: write.tags,\n      post: write.post,\n      postError: write.postError,\n      originalPostId: write.originalPostId\n    };\n  });\n\n  const onPublish = () => {\n    if (originalPostId) {\n      dispatch(updatePost({\n        title,\n        body,\n        tags,\n        id: originalPostId\n      }));\n      return;\n    }\n\n    dispatch(writePost({\n      title,\n      body,\n      tags\n    }));\n  };\n\n  const onCancel = () => {\n    navigate(-1);\n  };\n\n  useEffect(() => {\n    if (post) {\n      const {\n        _id,\n        user\n      } = post;\n      navigate(`/@${user.username}/${_id}`);\n    }\n\n    if (postError) {\n      console.log(postError);\n    }\n  }, [navigate, post, postError]);\n  return /*#__PURE__*/_jsxDEV(WriteActionButtons, {\n    onPublish: onPublish,\n    onCancle: onCancel,\n    isEdit: !!originalPostId\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 12\n  }, this);\n};\n\n_s(WriteActionButtonsContainer, \"CsT0U3sMv412fZodVk7nAlm7zIc=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n\n_c = WriteActionButtonsContainer;\nexport default WriteActionButtonsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"WriteActionButtonsContainer\");","map":{"version":3,"names":["React","useEffect","WriteActionButtons","useSelector","useDispatch","useNavigate","writePost","updatePost","WriteActionButtonsContainer","navigate","dispatch","title","body","tags","post","postError","originalPostId","write","onPublish","id","onCancel","_id","user","username","console","log"],"sources":["/home/djkim0604/klaytn/workspace_djkim/js_test/react_basic/blog/blog-frontend/src/containers/write/WriteActionButtonsContainer.js"],"sourcesContent":["import React, {useEffect} from 'react';\nimport WriteActionButtons from '../../components/write/WriteActionButtons';\nimport { useSelector, useDispatch } from '../../../node_modules/react-redux/es/exports';\nimport { useNavigate } from '../../../node_modules/react-router-dom/index';\nimport { writePost, updatePost } from '../../modules/write';\n\n\nconst WriteActionButtonsContainer = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const {title, body, tags, post, postError, originalPostId} = useSelector(\n        ({write}) => ({\n            title: write.title,\n            body: write.body,\n            tags: write.tags,\n            post: write.post,\n            postError: write.postError,\n            originalPostId: write.originalPostId,\n        })\n    );\n\n    const onPublish = () => {\n        if (originalPostId) {\n            dispatch(updatePost({title, body, tags, id: originalPostId}));\n            return;\n        }\n        dispatch(\n            writePost({\n                title, body, tags,\n            }),\n        );\n    };\n\n    const onCancel = () => {\n        navigate(-1)\n    }\n\n    useEffect(\n        () => {\n            if (post) {\n                const {_id, user} = post;\n                navigate(`/@${user.username}/${_id}`);\n            }\n            if (postError) {\n                console.log(postError);\n            }\n        }, [navigate, post, postError]\n    );\n\n    return <WriteActionButtons onPublish={onPublish} onCancle={onCancel} isEdit={!!originalPostId}/>;\n};\n\nexport default WriteActionButtonsContainer;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,kBAAP,MAA+B,2CAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,8CAAzC;AACA,SAASC,WAAT,QAA4B,8CAA5B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,qBAAtC;;;AAGA,MAAMC,2BAA2B,GAAG,MAAM;EAAA;;EACtC,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;EACA,MAAMK,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAM;IAACO,KAAD;IAAQC,IAAR;IAAcC,IAAd;IAAoBC,IAApB;IAA0BC,SAA1B;IAAqCC;EAArC,IAAuDb,WAAW,CACpE;IAAA,IAAC;MAACc;IAAD,CAAD;IAAA,OAAc;MACVN,KAAK,EAAEM,KAAK,CAACN,KADH;MAEVC,IAAI,EAAEK,KAAK,CAACL,IAFF;MAGVC,IAAI,EAAEI,KAAK,CAACJ,IAHF;MAIVC,IAAI,EAAEG,KAAK,CAACH,IAJF;MAKVC,SAAS,EAAEE,KAAK,CAACF,SALP;MAMVC,cAAc,EAAEC,KAAK,CAACD;IANZ,CAAd;EAAA,CADoE,CAAxE;;EAWA,MAAME,SAAS,GAAG,MAAM;IACpB,IAAIF,cAAJ,EAAoB;MAChBN,QAAQ,CAACH,UAAU,CAAC;QAACI,KAAD;QAAQC,IAAR;QAAcC,IAAd;QAAoBM,EAAE,EAAEH;MAAxB,CAAD,CAAX,CAAR;MACA;IACH;;IACDN,QAAQ,CACJJ,SAAS,CAAC;MACNK,KADM;MACCC,IADD;MACOC;IADP,CAAD,CADL,CAAR;EAKH,CAVD;;EAYA,MAAMO,QAAQ,GAAG,MAAM;IACnBX,QAAQ,CAAC,CAAC,CAAF,CAAR;EACH,CAFD;;EAIAR,SAAS,CACL,MAAM;IACF,IAAIa,IAAJ,EAAU;MACN,MAAM;QAACO,GAAD;QAAMC;MAAN,IAAcR,IAApB;MACAL,QAAQ,CAAE,KAAIa,IAAI,CAACC,QAAS,IAAGF,GAAI,EAA3B,CAAR;IACH;;IACD,IAAIN,SAAJ,EAAe;MACXS,OAAO,CAACC,GAAR,CAAYV,SAAZ;IACH;EACJ,CATI,EASF,CAACN,QAAD,EAAWK,IAAX,EAAiBC,SAAjB,CATE,CAAT;EAYA,oBAAO,QAAC,kBAAD;IAAoB,SAAS,EAAEG,SAA/B;IAA0C,QAAQ,EAAEE,QAApD;IAA8D,MAAM,EAAE,CAAC,CAACJ;EAAxE;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CA3CD;;GAAMR,2B;UACeH,W,EACAD,W,EAC4CD,W;;;KAH3DK,2B;AA6CN,eAAeA,2BAAf"},"metadata":{},"sourceType":"module"}