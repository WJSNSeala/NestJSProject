{"ast":null,"code":"var _jsxFileName = \"/Users/dia_forever_0914/Programming/WebProgramming/NestJSProject/blog/blog-frontend/src/containers/common/PostViewerContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from '../../../node_modules/react-redux/es/exports';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\nimport PostActionButtons from '../../components/post/PostActionButtons';\nimport { setOriginalPost } from '../../modules/write';\nimport { removePost } from '../../lib/api/posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostViewerContainer = () => {\n  _s();\n\n  //         <Route element={<PostPage />} path='/@:username/:postId' />\n  const params = useParams();\n  const postId = params.postId;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    post,\n    error,\n    loading,\n    user\n  } = useSelector(_ref => {\n    let {\n      post,\n      loading,\n      user\n    } = _ref;\n    return {\n      post: post.post,\n      error: post.error,\n      loading: loading['post/READ_POST'],\n      // true or false\n\n      /*\n      [START_LOADING]: (state, action) => ({\n      ...state,\n      [action.payload]: true\n      */\n      user: user.user\n    };\n  });\n  useEffect(() => {\n    dispatch(readPost(postId)); // unmount될 때는 포스트 데이터 없애기\n    // cleanup function\n\n    return () => {\n      dispatch(unloadPost());\n    };\n  }, [dispatch, postId]);\n\n  const onEdit = () => {\n    dispatch(setOriginalPost(post));\n    navigate('/write');\n  };\n\n  const onRemove = async () => {\n    try {\n      await removePost(postId);\n      navigate('/');\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  console.log(`POST: ${post} USER: ${user}`);\n  const ownPost = (user && user.id) === (post && post.userId);\n  console.log(`USERID: ${user.id} POSTID: ${post.userId}`);\n  console.log(\"OWNPOST: \", ownPost);\n  return /*#__PURE__*/_jsxDEV(PostViewer, {\n    post: post,\n    loading: loading,\n    error: error,\n    actionButtons: ownPost && /*#__PURE__*/_jsxDEV(PostActionButtons, {\n      onEdit: onEdit,\n      onRemove: onRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 94\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 12\n  }, this);\n};\n\n_s(PostViewerContainer, \"QGGxJ6DRIrmxZ5Ncjt9Wcke519s=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSelector];\n});\n\n_c = PostViewerContainer;\nexport default PostViewerContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostViewerContainer\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useNavigate","useParams","readPost","unloadPost","PostViewer","PostActionButtons","setOriginalPost","removePost","PostViewerContainer","params","postId","navigate","dispatch","post","error","loading","user","onEdit","onRemove","e","console","log","ownPost","id","userId"],"sources":["/Users/dia_forever_0914/Programming/WebProgramming/NestJSProject/blog/blog-frontend/src/containers/common/PostViewerContainer.js"],"sourcesContent":["import React, {useEffect} from 'react';\nimport { useDispatch, useSelector } from '../../../node_modules/react-redux/es/exports';\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { readPost, unloadPost } from '../../modules/post';\nimport PostViewer from '../../components/post/PostViewer';\nimport PostActionButtons from '../../components/post/PostActionButtons';\nimport { setOriginalPost } from '../../modules/write';\nimport { removePost } from '../../lib/api/posts';\n\nconst PostViewerContainer = () => {\n    //         <Route element={<PostPage />} path='/@:username/:postId' />\n    const params = useParams();\n    const postId = params.postId;\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const {post, error, loading, user} = useSelector(\n        ({post, loading, user}) => ({\n            post: post.post,\n            error: post.error,\n            loading: loading['post/READ_POST'], // true or false\n            /*\n            [START_LOADING]: (state, action) => ({\n            ...state,\n            [action.payload]: true\n            */\n           user: user.user,\n        }),\n    );\n\n    useEffect(\n        () => {\n            dispatch(readPost(postId));\n            // unmount될 때는 포스트 데이터 없애기\n            // cleanup function\n            return () => {\n                dispatch(unloadPost());\n            };\n        },\n        [dispatch, postId]\n    );\n\n    const onEdit = () => {\n        dispatch(setOriginalPost(post));\n        navigate('/write');\n    }\n\n    const onRemove = async () => {\n        try {\n            await removePost(postId);\n            navigate('/');\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    console.log(`POST: ${post} USER: ${user}`)\n\n    const ownPost = (user && user.id) === (post && post.userId);\n    console.log(`USERID: ${user.id} POSTID: ${post.userId}`)\n    console.log(\"OWNPOST: \", ownPost)\n    return <PostViewer post={post} loading={loading} error={error} actionButtons={ownPost && <PostActionButtons onEdit={onEdit} onRemove={onRemove}/>}/>;\n};\n\nexport default PostViewerContainer;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,8CAAzC;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,oBAArC;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,iBAAP,MAA8B,yCAA9B;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,SAASC,UAAT,QAA2B,qBAA3B;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;EAAA;;EAC9B;EACA,MAAMC,MAAM,GAAGR,SAAS,EAAxB;EACA,MAAMS,MAAM,GAAGD,MAAM,CAACC,MAAtB;EACA,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;EACA,MAAMY,QAAQ,GAAGd,WAAW,EAA5B;EAEA,MAAM;IAACe,IAAD;IAAOC,KAAP;IAAcC,OAAd;IAAuBC;EAAvB,IAA+BjB,WAAW,CAC5C;IAAA,IAAC;MAACc,IAAD;MAAOE,OAAP;MAAgBC;IAAhB,CAAD;IAAA,OAA4B;MACxBH,IAAI,EAAEA,IAAI,CAACA,IADa;MAExBC,KAAK,EAAED,IAAI,CAACC,KAFY;MAGxBC,OAAO,EAAEA,OAAO,CAAC,gBAAD,CAHQ;MAGY;;MACpC;AACZ;AACA;AACA;AACA;MACWC,IAAI,EAAEA,IAAI,CAACA;IATc,CAA5B;EAAA,CAD4C,CAAhD;EAcAnB,SAAS,CACL,MAAM;IACFe,QAAQ,CAACV,QAAQ,CAACQ,MAAD,CAAT,CAAR,CADE,CAEF;IACA;;IACA,OAAO,MAAM;MACTE,QAAQ,CAACT,UAAU,EAAX,CAAR;IACH,CAFD;EAGH,CARI,EASL,CAACS,QAAD,EAAWF,MAAX,CATK,CAAT;;EAYA,MAAMO,MAAM,GAAG,MAAM;IACjBL,QAAQ,CAACN,eAAe,CAACO,IAAD,CAAhB,CAAR;IACAF,QAAQ,CAAC,QAAD,CAAR;EACH,CAHD;;EAKA,MAAMO,QAAQ,GAAG,YAAY;IACzB,IAAI;MACA,MAAMX,UAAU,CAACG,MAAD,CAAhB;MACAC,QAAQ,CAAC,GAAD,CAAR;IACH,CAHD,CAGE,OAAOQ,CAAP,EAAU;MACRC,OAAO,CAACC,GAAR,CAAYF,CAAZ;IACH;EACJ,CAPD;;EAQAC,OAAO,CAACC,GAAR,CAAa,SAAQR,IAAK,UAASG,IAAK,EAAxC;EAEA,MAAMM,OAAO,GAAG,CAACN,IAAI,IAAIA,IAAI,CAACO,EAAd,OAAuBV,IAAI,IAAIA,IAAI,CAACW,MAApC,CAAhB;EACAJ,OAAO,CAACC,GAAR,CAAa,WAAUL,IAAI,CAACO,EAAG,YAAWV,IAAI,CAACW,MAAO,EAAtD;EACAJ,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,OAAzB;EACA,oBAAO,QAAC,UAAD;IAAY,IAAI,EAAET,IAAlB;IAAwB,OAAO,EAAEE,OAAjC;IAA0C,KAAK,EAAED,KAAjD;IAAwD,aAAa,EAAEQ,OAAO,iBAAI,QAAC,iBAAD;MAAmB,MAAM,EAAEL,MAA3B;MAAmC,QAAQ,EAAEC;IAA7C;MAAA;MAAA;MAAA;IAAA;EAAlF;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CApDD;;GAAMV,mB;UAEaP,S,EAEED,W,EACAF,W,EAEoBC,W;;;KAPnCS,mB;AAsDN,eAAeA,mBAAf"},"metadata":{},"sourceType":"module"}